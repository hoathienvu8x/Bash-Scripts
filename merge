#!/bin/bash

video="${1:-}"
audio="${2:-}"
output="${3:-}"

if [ "$video" == "" ]
then
    echo "Missing video file"
    echo "Usage: merge <video> <audio>"
    exit
fi

if [ "$audio" == "" ]
then
    echo "Missing audio file"
    echo "Usage: merge <video> <audio>"
    exit
fi

if [ "$output" != "" ]
then
    output="${output%%.*}"
else
    output="$(basename $video ".mp4")-merged"
fi

echo "Merge $video && $audio > $output.mp4"

ffmpeg -nostats -loglevel 0 -i $audio -vn -acodec copy a.aac
ffmpeg -nostats -loglevel 0 -i $video -i a.aac -c:v copy -c:a aac -strict experimental $output.mp4

rm -rf a.aac
exit
#
# ffmpeg -i video.mp4 -i audio.m4a  -c:v copy -c:a copy -map 0:v:0 -map 1:a:0 -shortest merge.mp4
#
# ffmpeg -i input.mp4 -ss 00:00:00 -to 00:10:00 -c copy output1.mp4
# ffmpeg -i input.mp4 -ss 00:10:00 -to 00:20:00 -c copy output2.mp4
# 
# ffmpeg -loop 1 -i image.jpg -i audio.wav -c:v libx264 -tune stillimage -c:a aac -b:a 192k -pix_fmt yuv420p -shortest out.mp4
# ffmpeg -loop 1 -y -i image8.jpg -i sound11.amr -shortest -acodec copy -vcodec mjpeg result.avi
# https://askubuntu.com/a/868831
# ffmpeg -loop 1 -i image8.jpg -i Mr_Perfect.mp3 -vf "scale='min(410,iw)':-2,format=yuv420p" -c:v libx264 -preset medium -profile:v main -c:a aac -shortest -movflags +faststart output.mp4
# /**
# * -i  input file
# * -ss start time in seconds or in hh:mm:ss
# * -to end time in seconds or in hh:mm:ss
# * -c codec to use
# */
#
# ffmpeg -i input.mp4 -lavfi '[0:v]scale=ih*16/9:-1,boxblur=luma_radius=min(h\,w)/20:luma_power=1:chroma_radius=min(cw\,ch)/20:chroma_power=1[bg];[bg][0:v]overlay=(W-w)/2:(H-h)/2,crop=h=iw*9/16' -vb 800K output.webm
# ffmpeg -i filein.m4a -ss 00:00:08 -to 00:04:04 -c copy filein-splited.m4a
# ffmpeg -i filein-splited.m4a -f flac fileout.flac
# ffmpeg -i input.webm -vn audio.m4a
#
# #!/bin/bash

# input_name="BKuSL2Ikeg4"
# 
# rm -rf a1.mp4 a1.m4a
# rm -rf a2.mp4 a2.m4a
# rm -rf a12.mp4 a12.m4a
# rm -rf croped.mp4 merge.mp4
# 
# ffmpeg -i $input_name.mp4 -ss 00:01:18 -to 00:02:25 -c copy a1.mp4
# ffmpeg -i $input_name.m4a -ss 00:01:20 -to 00:02:25 -c copy a1.m4a
# 
# ffmpeg -i $input_name.mp4 -ss 01:16:22 -to 01:16:37 -c copy a2.mp4
# ffmpeg -i $input_name.m4a -ss 01:16:28 -to 01:16:37 -c copy a2.m4a
# 
# ffmpeg -i a1.mp4 -i a2.mp4 -filter_complex "[0:v][1:v]concat=n=2:v=1[outv]" -map "[outv]" a12.mp4
# ffmpeg -i a1.m4a -i a2.m4a -filter_complex "[0:0][1:0]concat=n=2:v=0:a=1[outa]" -map "[outa]" a12.m4a
# 
# ffmpeg -i a12.mp4 -filter:v "crop=956:650:0:0" croped.mp4
# ffmpeg -i croped.mp4 -i a12.m4a  -c:v copy -c:a copy -map 0:v:0 -map 1:a:0 -shortest merge.mp4
#
