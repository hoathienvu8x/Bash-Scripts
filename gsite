#!/bin/bash
server_name="${1:-}"
server_ip=$(ip route get 8.8.8.8 | awk -F"src " 'NR==1{split($2,a," ");print a[1]}')
if [ "$server_name" == "" ]
then
    echo "Server name ?"
    exit
fi

echo "Install site : $server_name"

mkdir -p /home/$server_name/public_html
mkdir -p /home/$server_name/logs
chmod 777 /home/$server_name/logs

cat > /home/$server_name/public_html/index.html <<EOF
<!doctype html>
<html>
<head>
    <style>
    * { margin:0;padding:0;box-sizing:border-box;}
    body {background: linear-gradient(225deg,#00dcc0,#005af0 75%);color:#fff;text-align:center;}
    </style>
</head>
<body>
<h1>It's Works!</h1>
</body>
</html>
EOF

config_name="`echo $server_name | sed 's/\./_/g'`"

cat > "/etc/nginx/conf.d/$config_name.conf" <<END
server {
    listen 80;
    server_name www.$server_name;
    rewrite ^(.*) http://$server_name\$1 permanent;
}
server {
    listen 80;
    # access_log off;
    access_log /home/$server_name/logs/access.log;
    # error_log off;
    error_log /home/$server_name/logs/error.log;
	
    root /home/$server_name/public_html;
    index index.html index.htm;
    server_name $server_name;
    location / {
        try_files \$uri \$uri/ =404;
    }
    # Custom configuration
    include /home/$server_name/public_html/*.conf;
    location /nginx_status {
        stub_status on;
        access_log   off;
        allow 127.0.0.1;
        allow $server_ip;
        deny all;
    }
    # Disable .htaccess and other hidden files
    location ~ /\.(?!well-known).* {
        deny all;
        access_log off;
        log_not_found off;
    }
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }
    location ~* \.(3gp|gif|jpg|jpeg|png|ico|wmv|avi|asf|asx|mpg|mpeg|mp4|pls|mp3|mid|wav|swf|flv|exe|zip|tar|rar|gz|tgz|bz2|uha|7z|doc|docx|xls|xlsx|pdf|iso|eot|svg|ttf|woff)$ {
        gzip_static off;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        access_log off;
        expires 30d;
        break;
    }
    location ~* \.(txt|js|css)$ {
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        access_log off;
        expires 30d;
        break;
    }
}
END
chown nginx:nginx /home/$server_name
chown -R nginx:nginx /home/*/public_html

systemctl reload nginx
exit
