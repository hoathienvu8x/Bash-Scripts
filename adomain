#!/bin/bash 

home_dir="/home"

if ! which nginx > /dev/null 2>&1; then
    rm -f /etc/localtime
    ln -sf /usr/share/zoneinfo/Asia/Ho_Chi_Minh /etc/localtime

    if [ -s /etc/selinux/config ]; then
        sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config
        sed -i 's/SELINUX=permissive/SELINUX=disabled/g' /etc/selinux/config
    fi
    setenforce 0
    yum -y install epel-release yum-utils
    rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm
    yum clean all
    yum -y update
    yum -y install nginx unzip zip nano openssl ntpdate iptables-services
    ntpdate asia.pool.ntp.org
    hwclock --systohc
    systemctl enable nginx
    systemctl enable iptables
    systemctl enable ip6tables
    mkdir -p /var/log/nginx
    chown -R nginx:nginx /var/log/nginx
    systemctl start nginx
    systemctl start ip6tables
    cat > "/etc/nginx/nginx.conf" <<END
user nginx;
worker_processes auto;
worker_rlimit_nofile 260000;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections  2048;
    accept_mutex off;
    accept_mutex_delay 200ms;
    use epoll;
    #multi_accept on;
}
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '\$remote_addr - \$remote_user [\$time_local] "\$request" '
	              '\$status \$body_bytes_sent "\$http_referer" '
	              '"\$http_user_agent" "\$http_x_forwarded_for"';

    #Disable IFRAME
    add_header X-Frame-Options SAMEORIGIN;

    #Prevent Cross-site scripting (XSS) attacks
    add_header X-XSS-Protection "1; mode=block";

    #Prevent MIME-sniffing
    add_header X-Content-Type-Options nosniff;

    access_log  off;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay off;
    types_hash_max_size 2048;
    server_tokens off;
    server_names_hash_bucket_size 128;
    client_max_body_size 0;
    client_body_buffer_size 256k;
    client_body_in_file_only off;
    client_body_timeout 60s;
    client_header_buffer_size 256k;
    client_header_timeout  20s;
    large_client_header_buffers 8 256k;
    keepalive_timeout 10;
    keepalive_disable msie6;
    reset_timedout_connection on;
    send_timeout 60s;

    gzip on;
    gzip_static on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json text/javascript application/javascript text/xml application/xml application/xml+rss;

    include /etc/nginx/conf.d/*.conf;
}
END
    if [ -f /etc/sysconfig/iptables ]; then
        iptables -I INPUT -p tcp --dport 80 -j ACCEPT
        iptables -I INPUT -p tcp --dport 25 -j ACCEPT
        iptables -I INPUT -p tcp --dport 443 -j ACCEPT
        iptables -I INPUT -p tcp --dport 465 -j ACCEPT
        iptables -I INPUT -p tcp --dport 587 -j ACCEPT
        service iptables save
    fi
rm -rf /etc/nginx/conf.d/*
> /etc/nginx/conf.d/default.conf
    systemctl restart nginx
fi

echo -n "Nhap vao domain ban muon them roi an [ENTER]: " 
read domain
if [ "$domain" = "" ]; then
    echo "Ban nhap sai, vui long nhap chinh xac"
    exit
fi

echo -n "Cai dat Let's Encrypt (y/n)? "
read answer
if [ "$answer" != "${answer#[Yy]}" ]; then
    answer="y"
else
    answer="n"
fi

if [ ! -f /etc/letsencrypt/live/$domain/fullchain.pem ]; then
    answer="n"
fi

if [ ! -f /etc/letsencrypt/live/$domain/privkey.pem ]; then
    answer="n"
fi

if [ "$answer" == "n" ]; then
    echo -ne "Chung chi Let's Encrypt khong ton tai"
fi

config_name="`echo $domain | sed 's/\./_/g'`"

if [ -f /etc/nginx/conf.d/$domain.conf ] || [ -f /etc/nginx/conf.d/$config_name.conf ]; then
    echo "Phat hien thay $domain da ton tai tren he thong"
    echo "Chao tam biet...!"
    exit
fi

mkdir -p $home_dir/$domain/public_html
mkdir -p $home_dir/$domain/logs
chmod 777 $home_dir/$domain/logs
    
cat > "$home_dir/$domain/public_html/index.html" <<END
<!doctype html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
  body { text-align: center; padding: 150px; }
  h1 { font-size: 50px; }
  body { font: 20px Helvetica, sans-serif; color: #333; }
  article { display: block; text-align: left; width: 650px; margin: 0 auto; }
  a { color: #dc8100; text-decoration: none; }
  a:hover { color: #333; text-decoration: none; }
</style>
</head>
<article>
    <h1>We&rsquo;ll be back soon!</h1>
    <div>
        <p>Sorry for the inconvenience but we&rsquo;re performing some maintenance at the moment. If you need to you can always <a href="mailto:#">contact us</a>, otherwise we&rsquo;ll be back online shortly!</p>
        <p>&mdash; The Team</p>
    </div>
</article>
</body>
</html>
END
    
chown nginx:nginx $home_dir/$domain
chown -R nginx:nginx $home_dir/*/public_html
    
domain_alias="www.$domain"
if [[ $domain == *www* ]]; then
    domain_alias=${domain/www./''}
fi

sname=""
pname=""
nname="80"
if [ "$answer" == "y" ]; then
    sname="$domain "
    pname="s"
    nname="443 ssl http2"
fi

cat /dev/null > "/etc/nginx/conf.d/$config_name.conf"

if [ "$answer" == "y" ]; then
    cat >> "/etc/nginx/conf.d/$config_name.conf" <<END
server {
    listen 443 ssl http2;
    server_name $domain_alias;
    ssl_certificate /etc/letsencrypt/live/$domain/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$domain/privkey.pem;
    rewrite ^(.*) http$pname://$domain\$1 permanent;
}
END
fi

cat >> "/etc/nginx/conf.d/$config_name.conf" <<END
server {
    listen 80;
    server_name $sname$domain_alias;
    rewrite ^(.*) http$pname://$domain\$1 permanent;
}
server {
    listen $nname;

    # access_log off;
    access_log $home_dir/$domain/logs/access.log;
    # error_log off;
    error_log $home_dir/$domain/logs/error.log;

    root $home_dir/$domain/public_html;
    index index.html index.htm;

    server_name $domain;
END

if [ "$answer" == "y" ]; then
    cat >> "/etc/nginx/conf.d/$config_name.conf" <<END

    # SSL
    ssl_certificate /etc/letsencrypt/live/$domain/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$domain/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';

    # Improve HTTPS performance with session resumption
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    `if [ -f /etc/nginx/ssl/dhparam.pem ]; then echo -ne "\n    # DH parameters\n    ssl_dhparam /etc/nginx/ssl/dhparam.pem;"; fi`

    # Enable HSTS
    add_header Strict-Transport-Security "max-age=31536000" always;

END
fi

cat >> "/etc/nginx/conf.d/$config_name.conf" <<END
    # Custom configuration
    include $home_dir/$domain/public_html/*.conf;

    location / {
        try_files \$uri \$uri/ =404;
    }

    # Disable .htaccess and other hidden files
    location ~ /\.(?!well-known).* {
        deny all;
        access_log off;
        log_not_found off;
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    location ~* \.(3gp|gif|jpg|jpeg|png|ico|wmv|avi|asf|asx|mpg|mpeg|mp4|pls|mp3|mid|wav|swf|flv|exe|zip|tar|rar|gz|tgz|bz2|uha|7z|doc|docx|xls|xlsx|pdf|iso|eot|svg|ttf|woff)$ {
        gzip_static off;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        access_log off;
        expires 30d;
        break;
    }

    location ~* \.(txt|js|css)$ {
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        access_log off;
        expires 30d;
        break;
    }
}
END

nginx -s reload

echo "$domain da duoc them thanh cong vao server"
echo "Upload code len $home_dir/$domain/public_html/"
echo "Xem logs cua $domain tai $home_dir/$domain/logs"

exit
